<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Genki Ganko on Medium]]></title>
        <description><![CDATA[Stories by Genki Ganko on Medium]]></description>
        <link>https://medium.com/@genkiganko?source=rss-88d1438ba3c5------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*P509b2GVt1NgQu_hNkAVbQ.jpeg</url>
            <title>Stories by Genki Ganko on Medium</title>
            <link>https://medium.com/@genkiganko?source=rss-88d1438ba3c5------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Sun, 25 Aug 2024 06:31:02 GMT</lastBuildDate>
        <atom:link href="https://medium.com/@genkiganko/feed" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Create your Asset Inventory Management platform for FREE!!!]]></title>
            <link>https://genkiganko.medium.com/create-your-asset-inventory-management-platform-for-free-7929d9947236?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/7929d9947236</guid>
            <category><![CDATA[asset-management]]></category>
            <category><![CDATA[linux]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Fri, 26 Jul 2024 05:28:27 GMT</pubDate>
            <atom:updated>2024-07-26T05:30:23.191Z</atom:updated>
            <content:encoded><![CDATA[<iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F3oKIPEqDGUULpEU0aQ%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F3oKIPEqDGUULpEU0aQ%2Fgiphy.gif%3Fcid%3D790b7611k7g4kyl0zqtt32j5nkb1y7tp6xs93an9624lpa94%26ep%3Dv1_gifs_search%26rid%3Dgiphy.gif%26ct%3Dg&amp;image=https%3A%2F%2Fmedia2.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExNWFxZ2pqazk4MjFnNWZuMWZpMXBuZ2syamY1ZWRtMWYxb2dvbmNyYyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw%2F3oKIPEqDGUULpEU0aQ%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="326" frameborder="0" scrolling="no"><a href="https://medium.com/media/607d577013ad85275189733f9f28c6d8/href">https://medium.com/media/607d577013ad85275189733f9f28c6d8/href</a></iframe><p>There are tons of options out there where you can manage all your assets inventory on your own company or workplace like Asset Panda, ManageEngine, Ivanti, GoCodes, and much more. But the downside to it it that you will have to pay for subscriptions to these cloud-hosted platforms in order to keep maintaining your assets. But what if your company is on a budget and your are the IT admin and the management asked you if you create a platform where all assets, equipment, and physical machines can be managed? This is where this get to.</p><p>Today, I will be showing you how to create, manage, and maintain an asset management platform that is hosted on a Linux-based machine, physical or virtual machine. For this, I will be using VMWare ESXi hosted platform to create this but you can definitely do this on a cloud VM like AWS, Azure VM, or even on a Linode machine. I will be using an open-source platform called SnipeIT. You can find the whole repository on Github. So let’s get started.</p><h3>Create a virtual machine</h3><ol><li>For this tutorial, I am using VMWare ESXi to create my own Linux virtual machine to host my asset inventory platform.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/858/1*Jtl_eTPzUljOkrqFDTX6YQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/845/1*QuF57lEKKySJJMyn0SofGw.png" /></figure><p>2. I used Rocky Linux 9.3 since it is most similar and the same as a CentOS/RHEL machine. I wouldn’t go into details here on how I created a virtual machine on a ESXi host but I am just showing on some important details.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/731/1*YWRrmKJHm9iFXcXnRt9BfA.png" /></figure><p>3. You can see here below that I have created a VM that has the few limited resources since this machine will not have Linux GUI (because it does not need to), and will not be resource intensive like any other servers. This should be enough to get you started with this project.</p><ul><li>2 vCPU</li><li>4GB RAM</li><li>vHDD 16GB</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/843/1*smBrlOw7sSVVe9xZeIYQGg.png" /></figure><p>4. After you create your own VM, make sure you create a snapshot(VMWare), or checkpoint (HyperV) , or whatever you wanna call it. This ensure a safe rollback whenever you made a mistake on configuring your machine. Without this, you might have to go back from the start when setting it up which is not so ideal and time consuming. So always make your rolllback plan. Start</p><p>Start up your virtual machine and configure the basic configuration.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/616/1*qXiOC93E1wu8G5kEHXxJGA.png" /></figure><p>5. It’s totally up to you if you want to create a server with GUI for easier management but it would be less resource intensive when you create your Linux server on a bare minimum install so you wouldn’t have to deal with some bloatware that might be included.</p><p>From Rocky Linux, I have set up the network information, set root password, set SSH as root (not recommended), keyboard layout and language. When you are done, click OK and it will take you few minutes until you are done with initial installation.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ru5iYca789ablX5knm6HLg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/912/1*yt-YRA38kH1U20Yw8szHqw.png" /></figure><h3>Install Asset Management (Snipe-IT)</h3><ol><li>Before doing anything else, make sure you fully update your machine and install some important stuff to get this done.</li></ol><pre># Update all repositories<br>sudo dnf update -y &amp;&amp; sudo dnf upgrade -y<br>yum install wget tar git net-tools</pre><p>2. After this, change to /tmp directory and download the installer.</p><p>The installer is intended ONLY for fresh linux CentOS/Redhat or Debian/Ubuntu systems that have no other sites running on them. It will automatically pull the latest from the master branch.</p><pre># Change directory to /tmp because the script runs from /tmp directory<br>cd /tmp<br>wget https://raw.githubusercontent.com/snipe/snipe-it/master/install.sh<br>chmod 744 install.sh<br>./install.sh</pre><p>Running the install.sh script above will complete all the installation from installing the Apache2 web server, MariaDB database, PHP, Composer for PHP manager, and all other dependencies. This will also ask you if you want to create your own database or have the script create it for you. When you are done, you should be able to log in to the site welcome page through the set IP address of your server.</p><blockquote>If you want to access the site using a domain name, make sure you add the DNS lookup entry on your DCs or from your DNS provider platform like CloudFare, etc.</blockquote><p>3. Here below you can see the welcome screen of Snipe-IT. This is where you can create the initial database and create your local user account.</p><p>Click Next on Create Database Tables. This should be automatic.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NqM8KmdZAOZ5lZ8gUifIdA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*wogqyrjdoCXRnmRFvFYwlg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*JvKvlXSGcDYLZR-_Sic25Q.png" /></figure><p>4. After the initial welcome page screen, you are done! You have successfully create your own asset inventory management platform for your company.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*_YyGRkFZRV3yUjl0y0n1QA.png" /></figure><p>You have tons of things that you can do on this platform. Here are some of the options and functions that you can create for this.</p><ul><li>Branding — set the logo, title of the platform, colors, fonts.</li><li>Barcodes — can used for some of your equipment</li><li>MFA — 2FA security for the users who logs in to the platform.</li><li>LDAP — you can connect this platform to your local DC so your domain admin users can manage the platform whilst not worrying of normal users making changes on this platform.</li><li>Backups — this is necessary when you do not have redundancy or backup software for your machines and that you can always back up for inventory so you can always restore it as BCP.</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*O_gzm3tjOYrCEP45UqSqqg.png" /></figure><p>That is it! Congraluations!! You have managed to create your own asset inventory management platform safely without worrying of any incurring cost that might affect your business’ budget. I hope you enjoy this and please subscribe for more similar content and support for more. <br>Thank you.</p><figure><a href="https://www.buymeacoffee.com/genkiganko"><img alt="https://www.buymeacoffee.com/genkiganko" src="https://cdn-images-1.medium.com/max/717/1*0NOLwNoDN259sc-ZGTi4rw.png" /></a><figcaption><a href="https://www.buymeacoffee.com/genkiganko">https://www.buymeacoffee.com/genkiganko</a></figcaption></figure><p>PS: Please see the original Github repository and websites for more info.</p><ul><li><a href="https://github.com/snipe/snipe-it">GitHub - snipe/snipe-it: A free open source IT asset/license management system</a></li><li><a href="https://snipe-it.readme.io/docs/introduction">Introduction</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7929d9947236" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[I created my own home ‘office’ LAB network for $50]]></title>
            <link>https://genkiganko.medium.com/i-created-my-own-home-office-lab-network-for-50-79bf3c664fc2?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/79bf3c664fc2</guid>
            <category><![CDATA[fortigate]]></category>
            <category><![CDATA[cisco]]></category>
            <category><![CDATA[network-security]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Sat, 25 May 2024 10:14:14 GMT</pubDate>
            <atom:updated>2024-05-25T10:14:14.711Z</atom:updated>
            <content:encoded><![CDATA[<iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FfQZX2aoRC1Tqw%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FfQZX2aoRC1Tqw%2Fgiphy.gif%3Fcid%3D790b7611v4dwwyrhhg8cno4rbvgbxkmquosn775qtcy836dc%26ep%3Dv1_gifs_search%26rid%3Dgiphy.gif%26ct%3Dg&amp;image=https%3A%2F%2Fmedia1.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExejJtZTlsd3hudjNyN2gzZ2w1dXZtNTlpOWNyMmlkcHNyb2FtcGI4bSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw%2FfQZX2aoRC1Tqw%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="246" frameborder="0" scrolling="no"><a href="https://medium.com/media/d0d609b70de63ff651a7bedc69bb9ec4/href">https://medium.com/media/d0d609b70de63ff651a7bedc69bb9ec4/href</a></iframe><p>This is not a clickbait. I’ve literally got my second-hand network equipment from this article through Yahoo! Auction for around $50 (7,500 YEN) in total. Yes, this cheap! I’ve always wanted to set up my own devices at my own expense, and try to break the equipment without worrying of my company costs.</p><p>I live an hour away from Tokyo (Chiba prefecture) so I was able to get myself these devices for a reasonable cheap prices through Yahoo! Auction. For those who are wondering, this is like Ebay. Unfortunately, this is exclusively from Japan only. Now enough chitchats, and I’ll go over how I manage to factory reset, and configure my basic office LAB network.<br>For this project, I used Cisco Catalyst 3560 Series 24-Port, Fortigate 200D firewall, and 2 Fortinet AP822i V2. Unfortunately, these APs that I purchased was defective, so I was not able to completely test and configure them until the end.</p><h3>Network Switch setup</h3><h4>1. Connect to the switch console</h4><p>I used my Kali Linux-based OS laptop on this project since this is the only spare laptop I have at the moment. I connected the USB console cable from the switch console port to my laptop USB port. Since I connected from a Linux machine, there is a different way to find the console connection. Normally, when you putty into a machine from a Windows machine, you can easily find the port connection from the Device Manager. But from this Linux machine, I would have to go /dev and find the USB port connection. Note from this picture that the port is <strong>ttyUSB0</strong>. So I opened up a Putty session, click on Serial and type the absolute path of this because as you may have already know, everything on Linux is file.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*cp1brkL_xKE0-O6toY8E5g.png" /></figure><blockquote>Now that I’ve got my connection to the switch, time to reset the configuration.</blockquote><h4>2. Reset and delete old VLAN configuration</h4><p>I’ve got my Catalyst 3560 switch already reset but just to be sure, I reset it myself anyway. You will need to power down the switch, power it back on with the mode button pressed. You will eventually arrive at the <strong>switch:</strong> prompt. Note that I am deleting the VLAN configuration as well, since this is not automatically deleted when you do a normal factory reset on a used network switch.</p><pre>flash_init<br>delete flash:config.text<br>delete flash:vlan.dat<br>boot</pre><blockquote>I got this screen from below from my switch after the hard reset, so it should be done.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/812/1*iugb0TRCRALAB-Kzu2bxkA.png" /><figcaption>Image 2</figcaption></figure><h4>3. Basic switch configuration</h4><p>I created some passwords for login first as a general security measure. Enabled the line vty for few connections as well as a baseline. Passwords I created I created below are just temporary(maybe).</p><pre>enable<br>conf t<br>enable password cisco<br>enable secret cisco-secret<br>line vty 0 4<br>login<br>password cisco</pre><p>Now I enabled the VTP or VLAN Trunking Protocol to transpare. I wouldn’t go into details of every things so I would just have to let your curiosity roll. I have created the VLANs that I am planning to use. I only planned on creating 2 VLANs. <strong>VLAN 10 </strong>for management/dev VLAN and <strong>VLAN 100</strong> for the USERNET/DHCP server.</p><pre>vtp mode transparent<br>vtp domain homelab<br>vlan 10<br>vlan 100</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/309/1*leeF2W8rVPl3KOpB0PcW3Q.png" /></figure><p>Next, I have created the DHCP server for the supposed network for the ‘users. I excluded the network’s broadcast address as well as to not automatically lease the broadcast address, resulting into issues with the network.</p><pre><br>Ip dhcp pool NAME<br>network 192.168.100.1 255.255.255.0<br>Default-gateway 192.168.100.254<br>Dns-server 192.168.100.254<br><br>Lease 1<br>Domain-name google.com<br>Exit<br><br>Ip dhcp excluded-address 192.168.100.254<br>End</pre><p>At this point, I have assigned the switchports into their respective VLANs. I enabled the STP and bpduguard on this switch to avoid the loop if you introduce another switch on the network. Note that this may only apply on older switches.</p><pre>int range fa0/1-12<br>switchport mode access<br>switchport access vlan 100<br>switchport nonegotiate<br>shut<br>no shut<br>exit<br><br>int range fa0/13-24<br>switchport trunk encapsulation dot1q<br>switchport mode trunk<br>switchport access vlan 10<br>switchport nonegotiate<br>switchport protected<br><br>spanning-tree bpduguard enable<br>spanning-tree portfast trunk</pre><p>Now, I have assigned management IP addresses on these VLAN. And that is it for now, for my basic switch configuration until running point. I saved the configuration using ‘wr’ as a shortcut to save all the configurations made. You can also do ‘copy running-config startup-config’ and it will do the same result.</p><pre>conf t<br>int vlan 10<br>ip address 10.10.10.1 255.255.255.0<br>exit<br>int vlan 100<br>ip address 192.168.100.1 255.255.255.0<br>exit<br>wr</pre><h4>4. Basic firewall configuration</h4><p>Now that I have the switch config in place, I will need to power up my firewall and console into it. This firewall has been reset already so I do not have to reset it again. To be able to connect to the Fortigate firewall, I had to change my IP address to ‘192.168.1.X’ subnet since the default web interface IP of Fortigate machine after factory reset is ‘192.168.1.99’. I changed it <strong>‘nmtui’</strong> utility since this is much easier for me.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/252/1*Fd7AHHeHIBk71px7sGlATw.png" /><figcaption>Image 3</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/268/1*XlK3AUAIxPdGbxdWagZ1Zg.png" /><figcaption>Image 4</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/595/1*tnTiZl15r3ksATIqXTiL_Q.png" /><figcaption>Image 5</figcaption></figure><p>After changing the IP address to 192.168.1.2, I was able to access the Fortigate firewall web IP through 192.168.1.99.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/894/1*w1EJhVcsxeu2MIKxxs8rJw.png" /><figcaption>Image 6</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*wM1Y4LvpnvILakssX1zTVQ.png" /><figcaption>Image 6</figcaption></figure><p>Navigated to System -&gt; Settings to change the hostname first, and to easily identify the device from the network. I changed it to HOMEFGFW01. If you are doing this, make sure to check your Timezone and NTP server settings as this is extremely important. For other settings like HTTP/S port numbers, I left it as default.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*OCQxgmKBNHSFIja7a_KVOw.png" /><figcaption>Image 7</figcaption></figure><p>After this, I went ahead to do the config for the interfaces. As you see below, there is the default IP address for the MGMT interface and there is also an automatic IP assigned to the the WAN1 interface. The reason is because I plugged in my ISP device to the WAN1 port of this firewall, which makes it have a internet connection. Note that not all ISP devices are able to connect to any devices right away so be sure to check with your local provider.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*UqnLA5NVQF_bKeFEtb46kw.png" /><figcaption>Image 8</figcaption></figure><p>I changed the MGMT IP to the MGMT VLAN network mask that I just created from the Cisco switch earlier. You can also add some Trusted Host IP/mask to this interface if you prefer having it so. I changed the administrative access settings to only HTTPS for web access, PING for testing purposes, and SSH for testing and remote connection.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*8Yak_dd0YISJ0eVgLOHO5Q.png" /><figcaption>Image 9</figcaption></figure><p>At this point, I added all the remaining physical ports to the role LAN of this interface.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*oot7Yf5ijZzcNN4c3GjGWg.png" /><figcaption>Image 10</figcaption></figure><p>Next is I have opened the outbound static network connection from the gateway of this firewall, which is 192.168.1.254 at this point. This will ensure that you can access the internet from your network. I created a policy from the<strong> System -&gt; Policy&amp;Objects -&gt; IPv4 Policy and named it ALL-ALL.</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*tIGE05zXspUOi2x993CVvA.png" /><figcaption>Image 11</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*kv4_tXsgQJL3TXp_0SMg2Q.png" /><figcaption>Image 12</figcaption></figure><p>Now, from here, I was able to create, edit, clone, and rename this or any new policies into whatever policies I have to create. From my current ALL-ALL policy, right click into it, click Copy, and Paste it Above or Below. This means that you decide which policy should overrule one another. As you may have know already. Policies and ACL follows the top to bottom rule.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1002/1*oAkoVWvKdpK8y1uGjuMSmQ.png" /><figcaption>Image 13</figcaption></figure><p>I created the HTTP/HTTPS policy next, assigned the Incoming Interface, which is the LAN network, Outgoing Interface, and Source/Destination to ALL and ALL. I then created one for the DNS.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*iWtOEz66G8HAOXPV5qfZdQ.png" /><figcaption>Image 14</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*TWlecYTf5ZwwC34J-VUKtA.png" /><figcaption>Image 15</figcaption></figure><p>After I created my policies, I enabled them to apply the changes.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/775/1*wXVf4kwShmPDZeMQCpKLBA.png" /><figcaption>Image 16</figcaption></figure><p>And voila! I now have my simple and basic production HOMELAB network, imitating a small office network that can cater about 10–15 people. This may not be perfect at all but at least it is working. If you notice something to improve from this or any suggestion from improvements, I am open to anything. Please do leave a clap or comment, and share with someone if you think this is interesting. Follow me for more networking, system administration, and IoT related articles. Until next time!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=79bf3c664fc2" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GUI-fy all your Linux servers now!]]></title>
            <link>https://genkiganko.medium.com/gui-fy-all-your-linux-servers-now-af91584fe74e?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/af91584fe74e</guid>
            <category><![CDATA[linux]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Sun, 17 Mar 2024 08:41:45 GMT</pubDate>
            <atom:updated>2024-03-17T08:41:45.690Z</atom:updated>
            <content:encoded><![CDATA[<p>Pack on some awesomeness to all your Linux machines or servers. You will need some graphical user interface or what we call ‘GUI’.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*We9f_OdEMO6ECFW6" /><figcaption>Photo by <a href="https://unsplash.com/@6heinz3r?utm_source=medium&amp;utm_medium=referral">Gabriel Heinzer</a> on <a href="https://unsplash.com?utm_source=medium&amp;utm_medium=referral">Unsplash</a></figcaption></figure><p>Have you ever wandered off on a colossal, enigmatic, pitch-black sea of a Linux server that doesn’t have any GUI (graphical user interface), and you are lost that you have no idea where you are, what to do, where to go to? Yeah, I got you. I’ve been there too. I know what you are going through…</p><p>Okay, I might have gone a little overboard but you get my point, right? We want something to look at and navigate from where you are going on a Linux machine. This is why I’m introducing you these 5 amazing GUI that you can install on top of your Linux machines, for both servers and workstations. Note that this list is not limited to what you can install on your side. So here it goes:</p><h4><a href="https://kde.org/plasma-desktop/">1. KDE Plasma</a></h4><p>KDE Plasma is a modern and versatile desktop environment for Linux and Unix-like operating systems. It can provide users with a visually appealing and highly customizable interface for interacting with their computers. I like how this user interface is straightforward and so easy to use even for non-Linux users.</p><p>Here below are 3 key points of having KDE Plasma 5 installed on your machine.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/919/1*rH2NNz-_PqyGMBB2ns7Dbg.png" /><figcaption>KDE Plasma screen from <a href="https://kde.org/plasma-desktop/">https://kde.org/plasma-desktop/</a></figcaption></figure><ol><li><strong>Customization:</strong> KDE Plasma offers extensive customization options, allowing you to tailor your desktop experience to your preferences. You can easily change themes, widgets, icons, and desktop effects to suit your style.</li><li><strong>Performance:</strong> KDE Plasma is known for its efficiency and performance improvements. It is designed to be lightweight and fast, even on older hardware, providing a smooth user experience.</li><li><strong>Integration:</strong> KDE Plasma integrates well with other software and services. It supports various file managers, web browsers, and office suites, ensuring compatibility with your preferred tools.</li></ol><blockquote>I am not going into details on how to install this on top of your Linux so if you want to install KDE Plasma 5, go check this <a href="https://www.tecmint.com/install-kde-plasma-5-in-linux/">site</a>. Here is a quick command on a Ubuntu/Debian machine to install this.</blockquote><pre>$ sudo apt install kde-plasma-desktop</pre><h4><a href="https://mate-desktop.org/">2. MATE</a></h4><p>MATE Desktop Environment is a free and open-source desktop environment primarily developed for Linux and Unix-like operating systems. It is a continuation of the GNOME 2 desktop environment, aiming to provide a lightweight, traditional desktop experience reminiscent of older versions of GNOME.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/890/1*Y9jRTjIlUenro7LrrV299A.png" /><figcaption>MATE Desktop Environment</figcaption></figure><ol><li><strong>Classic Feel</strong>: MATE brings back the look and feel of older computer interfaces, like the ones you might remember from the early 2000s. It’s like finding your favorite, well-worn chair in that room, giving you a sense of nostalgia and familiarity.</li><li><strong>Simple Setup</strong>: Everything in MATE is straightforward and easy to understand. It’s like walking into a room where everything is neatly organized and within reach. You have your desktop icons where you expect them, a taskbar at the bottom for switching between open programs, and a menu for finding and launching applications.</li><li><strong>Documentation: </strong>There are a lot of documentation that you can see from their website so you wouldn’t have a hard time installing by your own.</li></ol><blockquote>Here is a quick command below that you can enter to install it on your Ubuntu/Debian machine.</blockquote><pre>sudo apt install ubuntu-mate-desktop</pre><h4><a href="https://www.xfce.org/">3. XFCE Desktop</a></h4><p>If you are looking for a modern, open source, <a href="https://www.tecmint.com/top-best-linux-lightweight-desktop-environments/">lightweight and easy-to-use, desktop environment for Linux</a> and several other Unix-like systems such as such as Mac OS X, *BSD, Solaris and many others, then you should consider checking out <strong>Xfce</strong>. It is fast, and importantly user friendly as well, with low system resources utilization.</p><p>It offers users a beautiful user interface combined with the following components and features:</p><ol><li>Thunar file manager</li><li>User session manger to deal with logins, power management and beyond</li><li>Desktop manager for setting background image, desktop icons, etc.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*qRiQWk7-JHYmzwc4u3o6-Q.png" /><figcaption>XFCE Desktop sample screenshot</figcaption></figure><p>Here are some of the reasons why you shoud pick XFCE for your Linux desktop machine.</p><ol><li><strong>Lightweight and Fast: </strong>XFCE doesn’t use much computer power, so it runs quickly, even on older computers.</li><li><strong>Customizable: </strong>You can change how XFCE looks and works to fit your style and preferences.</li><li><strong>Supportive Community:</strong> If you need help, there are lots of people online who can assist you with XFCE-related questions and issues.</li></ol><blockquote>Here is a quick command below that you can enter to install it on your Ubuntu/Debian machine. If you want more details, please visit this <a href="https://gcore.com/docs/hosting/virtual-servers/manage/install-gui-desktop-environment-on-ubuntu-centos-and-debian">site</a>.</blockquote><pre>sudo apt-get install xfce4-session xfce4-goodies</pre><h4><a href="https://ubuntuunity.org/">4. Unity Desktop</a></h4><p>Unity Desktop was a graphical user interface (GUI) developed by Canonical Ltd. for the Ubuntu operating system. It aimed to provide a modern, user-friendly desktop environment for Linux users.</p><p>Unity Desktop garnered mixed reactions from the Linux community. Some users appreciated its modern design and user-friendly features, while others criticized it for its departure from traditional desktop paradigms and its initial performance issues. Despite this, Unity Desktop played a significant role in shaping the Ubuntu user experience during its active development years.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/643/1*V2fZ8tHoHpF562hHOGnkJA.png" /><figcaption>Unity Desktop screenshot from the website</figcaption></figure><ol><li><strong>User-friendly interface: </strong>Unity Desktop provides a familiar and intuitive interface, making it easier for users to navigate their Linux system.</li><li><strong>Integrated search:</strong> Unity Desktop includes a powerful search feature that allows users to quickly find applications, files, and settings without having to manually browse through menus.</li><li><strong>Integration with Ubuntu: </strong>Unity Desktop was originally developed for Ubuntu Linux and is tightly integrated with the Ubuntu operating system, offering seamless compatibility and updates.</li></ol><blockquote>Here is a quick command below that you can enter to install it on your Ubuntu/Debian machine. If you want more details, please visit this <a href="https://ubuntuunity.org/">site</a>.</blockquote><pre>sudo apt install ubuntu-unity-desktop</pre><h4><a href="https://cockpit-project.org/">5. Cockpit Project</a></h4><p>And the last but the favorite, the Cockpit Project is an open-source web-based graphical interface for servers, intended for everyone, especially those who are new to Linux, familiar with Linux and want an easy, graphical way to administer servers, and expert admins who mainly use other tools but want an overview on individual systems. I like that this is web-based graphical user interface and it is best suitable for enterprise production servers if you want a quick grasp on what’s going with your back-end side.</p><p>It provides administrators with an intuitive and centralized platform for managing various aspects of their Linux servers, including system configuration, monitoring, and troubleshooting. Developed primarily for Red Hat Enterprise Linux (RHEL) and its derivatives like CentOS and Fedora, Cockpit allows users to perform administrative tasks through a web browser, thus making server management more accessible and user-friendly.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*qO9kwgmTW8c5uyA19NZOAA.png" /><figcaption>Cockpit Project</figcaption></figure><p>Here is some of the reasons why you should use this as a graphical user interface for your Linux machines especially servers.</p><p><strong>Dashboard:</strong> Cockpit presents administrators with a dashboard that offers an overview of essential system information such as CPU usage, memory usage, disk space, and network activity. This provides a quick snapshot of the server’s health and performance.</p><p><strong>System Configuration:</strong> Users can manage various system settings and configurations through Cockpit, including network settings, user accounts, services, storage devices, and firewall rules. This centralized interface simplifies the process of configuring and maintaining Linux servers.</p><p><strong>Logs and Journal:</strong> Cockpit allows administrators to view system logs and journal entries, facilitating troubleshooting and debugging tasks. It provides tools for searching, filtering, and analyzing log data directly from the web interface.</p><p><strong>Software Updates:</strong> Cockpit includes tools for managing software updates and package installations on Linux servers. Administrators can view available updates, install packages, and perform system upgrades through the web interface.</p><p><strong>Container Management: </strong>Cockpit integrates with container technologies like Docker and Podman, allowing administrators to manage containerized applications and Docker images directly from the Cockpit dashboard.</p><p><strong>Virtual Machine Management: </strong>For servers running virtualization platforms like KVM, Cockpit provides tools for managing virtual machines (VMs), including creating, starting, stopping, and monitoring VMs.</p><p><strong>Security: </strong>Cockpit is designed with security in mind, providing authentication mechanisms to control access to server management features. Administrators can configure user accounts and permissions to restrict access to sensitive server functions.</p><blockquote>I will not be having a quick command to install this on top of your production Linux machines but please check this <a href="https://cockpit-project.org/running.html#rhel">site</a> if you want to try it yourself.</blockquote><h3>CONCLUSION</h3><p>I have specified a few examples of different kinds of Linux graphical user interface for both desktop machines, workstations, and servers. You may not like one of these interfaces according to your preferences, so please feel free to do some research on your own.</p><p>If you just want to taste each one of these flavors, sure you can try all of these. But I would suggest to just install the whole package of a Linux distro of your preferences to lessen the burden.</p><p>When it comes to production servers, I’m definitely rooting for <strong>Cockpit Project.</strong> We use on where I work at and tell you what, it is so helpful! The software options, security specs, and community support is superb.</p><p>If you have come up until this point, thank you very much for reading this article all through the end. I will be posting tons of articles regarding my projects soon and I can’t wait to share it with you. My current projects are mostly cybersecurity, hacking, and hardware related.</p><p>If you liked this, please do clap on this post, strike a comment and follow me more for. THANKS!!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=af91584fe74e" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The Power of VIM [Linux series]]]></title>
            <link>https://genkiganko.medium.com/the-power-of-vim-linux-series-4f3eac5bb347?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/4f3eac5bb347</guid>
            <category><![CDATA[linode]]></category>
            <category><![CDATA[linux]]></category>
            <category><![CDATA[system-administration]]></category>
            <category><![CDATA[program]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Fri, 08 Mar 2024 09:03:59 GMT</pubDate>
            <atom:updated>2024-03-08T09:03:59.849Z</atom:updated>
            <content:encoded><![CDATA[<p>What, why, where, who’s and how’s of VIM.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FB4dt6rXq6nABilHTYM%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExaWVtOHhvem4xd2gwbWRvMGdhMW5wNnlxYXdyZzk5ZndrNmhzcTJ6bCZlcD12MV9naWZzX3NlYXJjaCZjdD1n%2FB4dt6rXq6nABilHTYM%2Fgiphy.gif&amp;image=https%3A%2F%2Fmedia0.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExZm9sem81cTM5cjFvM3NyaWV2aW10aXlsbTRsandwaXM2bjhydXpkaiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw%2FB4dt6rXq6nABilHTYM%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="409" frameborder="0" scrolling="no"><a href="https://medium.com/media/fc58c4fccd537718b75e6a1de1fc4ab4/href">https://medium.com/media/fc58c4fccd537718b75e6a1de1fc4ab4/href</a></iframe><p>Working with Linux files can be extremely daunting. Most of the time, in the industry handling servers like web and proxy servers, authentication server, firewall server, database servers, and scripting automations, will be Unix-based. And there will be a time where you need to manually tweak these files, and when I say tweak, I mean configuring these files without a user interface like Windows, or sometimes, not even a mouse. So what do you do? Sure, you can use ‘<a href="https://www.nano-editor.org/">nano</a>’ or <a href="https://www.gnu.org/software/emacs/">‘emacs</a>’. It is so easy to use. But what if you’re like me who’s so extra, you want to make things complicated? Then, you use, ‘vi’ instead! Or VIM, which means Vi IMproved.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*4PBnkSh6KPn72kKuLjJ88w.jpeg" /><figcaption>Photo by <a href="https://unsplash.com/@florianolv?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Florian Olivo</a> on <a href="https://unsplash.com/photos/lines-of-html-codes-4hbJ-eymZ1o?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash</a></figcaption></figure><h3><strong>What is VIM</strong></h3><p>According to the <a href="https://en.wikipedia.org/wiki/Vim_(text_editor)">Wikipedia</a>, Vim is a free and open-source, screen-based text editor program. It is an improved clone of Bill Joy’s vi. Vim’s author, Bram Moolenaar, derived Vim from a port of the Stevie editor for Amiga and released a version to the public in 1991.</p><p>In 2018, it was voted as the most popular Linux editor from Linux Journal magazine.</p><p>Yes, history. Pretty boring, right? I get that.</p><p>So let’s cut to the chase.</p><h3><strong>Why use VIM?</strong></h3><p>VIM is a powerful tool on Linux machines. Unlike nano or emacs, you can do customize your text editor on VIM and even install some plug-ins. Knowing how to use VIM can be really helpful because some distributions, you are only given ‘vi’ as text editor. Learning VIM can be a learning curve but it will definitely be worth it if you learn at least the basics and most important ones. Some Linux flavors like AmigaOS, ArchLinux, and OpenWRT has this VIM pre-installed on them.</p><p>One of the defining features of VIM is its modal editing system, which enables users to seamlessly switch between different modes — such as insert mode, command mode, and visual mode — depending on the task at hand. This unique approach to editing affords users a level of fluidity and control that is simply unparalleled, allowing them to navigate, edit, and manipulate text with unparalleled speed and precision.</p><blockquote>If you want to see how I used VIM on OpenWRT, please check my <a href="https://medium.com/p/ec29aa86d073">previous article</a>.</blockquote><h3><strong>Who uses VIM</strong></h3><p>People who uses text editor for hours, writing a software, configuration of text files. It is popular among programmers, system administrators, writers, SOC analysts, ethical hacker, and anyone who works extensively with Linux text files. Vim’s powerful features, including its editing system, making it efficient for tasks ranging from simple text editing to complex software development. While Vim has a reputation for a steep learning curve, many find its productivity benefits well worth the initial investment in learning how to use it effectively.</p><h3><strong>Where to use VIM</strong></h3><p>Like I said, some of the Linux distributions out there come with pre-installed VIM. But you might need to update their packages and modules if they’re outdated.</p><p>To update your VIM, enter these commands below based on some of thedistribution that you use.</p><p>RedHat/CentOS</p><blockquote>dnf</blockquote><p>Ubuntu/Debian</p><blockquote>apt</blockquote><p>ArchLinux</p><blockquote>pacman</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*3E9ZMTUxhfqLpS89RhRWrA.png" /><figcaption>Capture from Linode Rocky Linux Update</figcaption></figure><h3><strong>How to use Vim</strong></h3><p>Here comes to main course! I will only be mentioning what I think the most important commands that will help you survive your daily work. Note that these are the commands that I think are for survival, but you can do way beyond these commands below.</p><ol><li>Exiting VIM without saving it</li></ol><blockquote>ESC + :q</blockquote><p>2. Exiting VIM and saving it</p><blockquote>ESC + :wq</blockquote><p>3. Navigate to a line, insert an input</p><blockquote>Arrow keys + i</blockquote><p>4. delete (cut) a line</p><blockquote>dd</blockquote><p>5. exit insert mode</p><blockquote>Esc or Ctrl + c</blockquote><p>6. delete word before the cursor during insert mode</p><blockquote>Ctrl + w</blockquote><p>7. insert at the beginning of the line</p><blockquote>I</blockquote><p>8. insert (append) after the cursor</p><blockquote>a</blockquote><p>9. insert (append) at the end of the line</p><blockquote>A</blockquote><p>I hope you are able to grasp some basic ideas of using VIM just by reading this article. This may not be a lot but it will get you started on editing more and more files on Linux based systems. Hope you enjoyed this article. Please follow for more!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4f3eac5bb347" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How I made my travel router/VPN in less than $100]]></title>
            <link>https://genkiganko.medium.com/how-i-made-my-travel-router-vpn-in-less-than-100-ec29aa86d073?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/ec29aa86d073</guid>
            <category><![CDATA[linux]]></category>
            <category><![CDATA[raspberry-pi]]></category>
            <category><![CDATA[networking]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Wed, 21 Feb 2024 04:23:41 GMT</pubDate>
            <atom:updated>2024-02-21T04:23:41.813Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/667/1*AwucMdpdU8_D7VSbsLFD8w.jpeg" /><figcaption>How I feel when the Wifi is down</figcaption></figure><p>Public internet and wifi are really such a blessing for people who does not have enough access to have an internet connection installed on their home. You go on a coffee shop, or a shopping mall, or even a park (yes, some parks in Japan have free wifi), and you can easily get a free wifi connection. But you may have seen some in the internet how madly unsafe it is to connect to a public wifi. Someone can easily host their rogue AP (wifi) and have you connected to a ‘public wifi’ that sounds legit. You connect to the that public wifi, you type in a password, username, or even email address, and voila! Your personal information has been breached already.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FiAenpzAjyj4MEHgUHy%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FiAenpzAjyj4MEHgUHy%2Fgiphy.gif%3Fcid%3D790b761122amtthhh0o41o1lbh03700omctv3nef5rmrvud9%26ep%3Dv1_gifs_search%26rid%3Dgiphy.gif%26ct%3Dg&amp;image=https%3A%2F%2Fmedia3.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExb2F0eTNrMzR6Y203M21qd256Z2syNDV3NDV4aHBnNDByb3UybDFocSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw%2FiAenpzAjyj4MEHgUHy%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="435" frameborder="0" scrolling="no"><a href="https://medium.com/media/41cfe29e16dc8d7183440fb491f9d89f/href">https://medium.com/media/41cfe29e16dc8d7183440fb491f9d89f/href</a></iframe><p>This is the main reason why I started this mini project of mine. I’ve researched how am I able to be safe from the internet while not breaking my bank. As just I realized, I have a Raspberry Pi 4 at home, and so the tinkering begins.</p><p>I will be showing you how I was able to setup my own travel router, with safe VPN install that connects to my NordVPN subscription so I can use it anywhere I go, and not thinking about my credentials getting stolen. This may or may not work on you, so please do your own research as well. This will only serves as a guide to setup your own router and VPN, and trust me, it is worth it! This is one of the best things I’ve ever created.</p><h4>Things you need:</h4><ol><li><strong>Raspberry Pi</strong> — You will need a Raspberry Pi board that has built-in wifi chipset on it. I recommend Raspberry Pi 4B so it has better CPU module and RAM chipset, but you can start on Pi 3. I got mine on auction for $40.</li></ol><blockquote><a href="https://s.click.aliexpress.com/e/_EG2CmfX">Raspberry Pi 4 </a>or from <a href="https://www.raspberrypi.com/products/">https https://www.raspberrypi.com/products/</a></blockquote><p>2.<strong> OpenWRT Raspberry Pi</strong> — This will be your operating system that you will build your router and VPN. Note that this is Linux-based system. You will need to find the correct image for your model. This is open-source so it is free. $0.</p><blockquote><a href="https://openwrt.org/toh/raspberry_pi_foundation/raspberry_pi">https://openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></blockquote><p>3.<strong> WIFI6 USB adapter </strong>— You can use whichever WIFI USB adapter you like as long as it is compatible to OpenWRT. You can buy any brands or models you like but this is the chipset that I preferred because this is the fastest I can get from Japan, and this is proven that it has withstand the work I needed. I got mine for $13. To know more about compatible wifi adapter chipsets for OpenWRT, look further <a href="https://github.com/morrownr/88x2bu-20210702/tree/main">here</a>.</p><blockquote><a href="https://s.click.aliexpress.com/e/_m0nzg9C">ComFast AX1800 CF-953AX</a></blockquote><p>4. MicroSD card — Pretty basic stuff but at least get a 32GB card so have everything running without worrying. Here is a link where you can get it. You can get it below $10 from here.</p><blockquote><a href="https://s.click.aliexpress.com/e/_Ey5dAGZ">Lenovo MicroSD memory cards</a></blockquote><p>5. Raspberry Pi 4 Cooling Fan Hat GPIO extension (optional) — You don’t have to buy this but it would just make you stop worrying about overheating Pi board. Plus it looks cooler, you’ll see later. I have it too! You can get it from here for a $1.</p><blockquote><a href="https://s.click.aliexpress.com/e/_mOaOC8O">Cooling Fan Hat GPIO extension for Raspberry Pi 4B</a></blockquote><h3>Install OpenWRT on your Raspberry Pi</h3><ol><li>Assuming you already have the Raspberry Pi Imager installed on your computer and your OpenWRT image on your computer, start up Raspberry Pi Imager. From the bottom option, click on the Custom OS, and choose the newly downloaded image.</li></ol><blockquote>NOTE: I have here from my <a href="https://medium.com/@jiro.robles.goto/create-your-own-lamp-linux-apache-mysql-php-web-server-on-a-raspberry-pi-4b-3c0938426cf2">previous post</a> on how to install Raspberry Pi Imager if you have not downloaded it yet.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*pJ7rLmPKK1G1dMggaE29MQ.jpeg" /><figcaption>Raspberry Imager (Use custom option)</figcaption></figure><p>2. Make sure you choose the correct SD card! Don’t make the same mistake I did. :D .</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/706/1*6F-4OA7uYarQc4CHmHOPBQ.jpeg" /><figcaption>SDHC card option</figcaption></figure><p>3. It should take about 3–5 minutes to finish creating the image. After it is done, insert it to your Raspberry Pi, connect to an external monitor and power it up. BTW, I used a MicroSD card reader to install this image so you might need one of these <a href="https://s.click.aliexpress.com/e/_msBWUz0">card readers</a>.</p><h3>Configuration begins (THE AWESOME PART!)</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*AoS4KHsBLzNX7WVd0DTr2w.jpeg" /><figcaption>OpenWRT welcome message</figcaption></figure><ol><li>When you are inside the OpenWRT, login as the root. There will be no password so make sure to at least create a password using the ‘passwd’ command. You are now welcomed with the OpenWRT initialization screen. Go to the/etc/config repository and create a backup of all the files that you will be making changes with.</li></ol><blockquote>cd /etc/config</blockquote><blockquote>cp network network.bk</blockquote><blockquote>cp wireless wireless.bk</blockquote><blockquote>cp firewall firewall.bk</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/991/1*A6dCihNDIqfzm9FnyaxuQw.jpeg" /><figcaption>List of files under /etc/config</figcaption></figure><p><strong>2.</strong> Now we‘re going to do some configurations to these files that we just created a backup with. OpenWRT is equipped by ‘vi’ as its text editor by default so we are initially using this. While you are at the /etc/config, type:</p><blockquote>vi network</blockquote><blockquote>If you want to know more about VIM and how to use it, check my other post.</blockquote><p>Now you will need to add and change new interfaces and information from here. Note that the ‘<strong>lan’ </strong>interface, you will need to change it on one of the IP addresses from your own network. For the <strong>‘wwan’,</strong> I used Cloudfare and Google DNS servers because how could it go wrong, right? Let’s hope not. For the ‘vpnclient’ interface, we will use this later for our VPN configuration.</p><blockquote>config interface ‘lan’<br> ipaddr 192.168.0.200<br> option force_link ‘1’</blockquote><blockquote>config interface ‘wwan’<br> option proto ‘dhcp’<br> option peerdns ‘0’<br> option dns ‘1.1.1.1 8.8.8.8’</blockquote><blockquote>config interface ‘vpnclient’<br> option ifname ‘tun0’<br> option proto ‘none’</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1020/1*QC_GrM3srhsAgDxu9CHhVA.jpeg" /><figcaption>/etc/config/network</figcaption></figure><p>Now it is time to save and exit the file. I know you are scared since it is vim. I was, too. For now, just click on ‘ESC’ button and when you see something from the lower left screen, type :wq and click enter. This will save your configuration changes and exit the text editor.</p><p><strong>3. </strong>Next we will edit the <strong>firewall</strong> file. Again type this to open the file. We will only change one thing here, for now.</p><blockquote>vi firewall</blockquote><p>When you are inside, find the ‘config zone’ and change ‘REJECT’ to ‘ACCEPT’. This will allow the traffic from outside network. When done, save the file and exit.</p><blockquote>config zone<br> option input ACCEPT</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*uOPzMqRwbDQYvx-YafBTcw.jpeg" /><figcaption>/etc/config/firewall</figcaption></figure><p><strong>4. </strong>Lastly, we will be editing the <strong>wireless</strong> file. Open the file by typing this:</p><blockquote>vi wireless</blockquote><p>From here, you will add these options under the ‘radio0’. This is the one that will be connected to the ‘wwan’ or the outside internet.</p><blockquote>config wifi-device ‘radio0’<br> option disabled ‘0’<br> option channel ‘7<br> option hwmode ‘11g’<br> option htmode ‘HT20’<br> option short_gi_40 ‘0’</blockquote><p>When done, save the file and exit.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/982/1*7rM8zE-3zyb_tM0UB5hKSg.jpeg" /><figcaption>/etc/config/wireless</figcaption></figure><p><strong>5. </strong>Now for these changes to be applied, we need to enter this command. After entering these commands, there will be no output. Reboot the machine.</p><blockquote>uci commit wireless<br>wifi</blockquote><p><strong>6. </strong>After your Pi has booted up, you should now be able to access the OpenWRT web GUI. Open up a browser and enter the IP address that you set on the ‘network’ file.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*SdRlCAYjmfJe1z6ykJv6Bg.jpeg" /><figcaption>OpenWRT web GUI</figcaption></figure><p><strong>7. </strong>From the top bar, navigate to Network -&gt; Wireless.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/658/1*-tseGB-nRx1n03bAkyN_Tg.png" /><figcaption>Network -&gt; Wireless options</figcaption></figure><p>Here, you will see the radio interfaces already broadcasting and getting feeds to your Pi. Click on your wifi network, for now.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*s42Ix956oJ-agosQObpFbA.jpeg" /><figcaption>Wireless Overview</figcaption></figure><p>You should be able to see your WiFi SSID here. If so, click the blue ‘Scan’ button, and click ‘Join Network’.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*F62C_VPAvCua_qh58WW9DQ.png" /><figcaption>Join Network: Wireless Scan</figcaption></figure><p>Put your WiFi password to it and from the botttom drop-down menu, click on the ‘wwan’. This is all you need to do here. Remember the interface you created on the network file? Here it is. Now, click Submit and Save.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*VAFDSptif4ohlX9TRp_eRw.png" /><figcaption>Joining Wireless Network</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NjMwl8Vl-jyNrGgcQU__eg.jpeg" /><figcaption>Wireless Network: Client</figcaption></figure><p>Now we’re not done yet here. When you come back to the Wireless Overview screen, make sure that you click the ‘Save&amp;Apply’ button from this screenshot.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*UuyH9mrm-Spfy2GfaG9g-w.png" /><figcaption>Wireless Overview</figcaption></figure><p><strong>8. </strong>We now have internet so we can get all the OPKG and OpenVPN packages and files needed to get the wireless adapter running.</p><blockquote>opkg update<br>reboot<br>opkg update</blockquote><blockquote>opkg install kmod-rt2800-lib kmod-rt2800-usb kmod-rt2x00-lib kmod-rt2x00-usb kmod-usb-core kmod-usb-uhci kmod-usb-ohci kmod-usb2 kmod-mt7921u usbutils openvpn-openssl luci-app-openvpn nano ip-full</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*CIEDE6iDf0Z7DPbAHN83vA.jpeg" /><figcaption>opkg update</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*GwtcIG5HiFJOAUZjOxLAtQ.jpeg" /><figcaption>opkg instal kmod….</figcaption></figure><p>Now plug in the wifi adapter. You should be able to see the USB Wifi adapter here.</p><blockquote>lsusb</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/801/1*Ce0zr4Tf5iumwS63SVPwrA.jpeg" /><figcaption>lsusb command</figcaption></figure><p>Enable the wireless adapter using this command below. Now, in theory, if your wireless adapter was accepted and compatible, this should work. I’ve had my own mistakes from here so I had to wait a month for my new USB wifi adapter to arrive.</p><blockquote>ifconfig wlan1 up<br>ifconfig</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/909/1*IF-JBbdV6W6HkJmnrBcEMA.jpeg" /><figcaption>ifconfig wlan1 up</figcaption></figure><p>9. Now, edit the wifi adapter configuration. You need to do this to manually set the SSID, password, encryption method for your 2nd wireless interface. You can decide for your new WiFI SSID and password.</p><blockquote>nano /etc/config/wireless</blockquote><p>Under config wifi-device ‘radio1’ , change this.</p><blockquote>option disabled ‘0’</blockquote><p>Under config wifi-iface ‘default_radio0’</p><blockquote>option ssid ‘WIFI_NAME’<br> option encryption ‘psk2’<br> option key ‘password’</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*R9mkY82RND6uA_R32rEUDg.jpeg" /><figcaption>/etc/config/wireless</figcaption></figure><p>We used nano text editor this editor so this is much easier to save and exit. Type in ‘CTRL’ + X + Y + ‘Enter’ . After you saved the configuration and exit, you have apply the changes made again. Enter this command below.</p><blockquote>uci commit wireless<br>wifi</blockquote><p>10. By this part, you should now be able to use your travel router anywhere you go. But what good will it be if it was not safe, right? This is the part where we do some VPN configuration. I used NordVPN since they have the Linux config file which is perfect for this scenario.</p><h3>VPN Configuration</h3><blockquote>Note that this step is optional. You can do it or not but I would like to make things complicated sometimes. You can try to use PiVPN or WireGuard but I cannot vouch for it, if it works or not.</blockquote><ol><li>First is I got the OVPN UDP config from the NordVPN website. I picked one of the Japan VPN configuration files since that is where I resided. I got it from here.</li></ol><blockquote><a href="https://nordvpn.com/ovpn/">https://nordvpn.com/ovpn/</a></blockquote><p>Now you go to the CLI of the OpenWRT again and enter this command below. This command will take the OVPN config file from the NordVPN server and save it to your local file.</p><blockquote>wget -P /etc/openvpn <a href="https://downloads.nordcdn.com/configs/files/ovpn_udp/servers/jp674.nordvpn.com.udp.ovpn">https://downloads.nordcdn.com/configs/files/ovpn_udp/servers/jp674.nordvpn.com.udp.ovpn</a></blockquote><p>2. The OpenVPN configuration for NordVPN requires you to enter your NordVPN service credential username and password everytime OpenVPN starts. However, I made some adjustments so the credentials would be provided automatically. Now, open the downloaded server configuration file using the nano text editor.</p><blockquote>nano /etc/openvpn/jp674.nordvpn.com.udp.ovpn</blockquote><p>3. After that, I appended the word ‘secret’ (without quotation marks) to the string ‘auth-user-pass’. Result should be like this:</p><blockquote>auth-user-pass secret</blockquote><p>4. Now, we need to create a new file named <em>secret</em>, where the NordVPN service credentials will be stored. To do so, run the following command:</p><blockquote><strong>nano /etc/openvpn/secret</strong></blockquote><p>In the first line of the file enter your NordVPN service username, and the second — NordVPN service password.</p><p>5. I configured OpenVPN using the downloaded configuration file</p><p>Change the file’s extension from <strong>.ovpn</strong> to <strong>.conf</strong>, which will allow OpenVPN to find it automatically by its extension.<br> <br> To do so, you can use the <strong>mv</strong> command:</p><blockquote><strong>mv /etc/openvpn/jp674.nordvpn.com.udp.ovpn /etc/openvpn/jp674.nordvpn.com.udp.conf</strong></blockquote><p>Or you can however do this. Specify the file name in “/etc/config/openvpn” by using the following “uci” commands:</p><blockquote><strong>uci set openvpn.nordvpn=openvpn</strong><br> <strong>uci set openvpn.nordvpn.enabled=’1&#39;</strong><br> <strong>uci set openvpn.nordvpn.config=’/etc/openvpn/uk2054.nordvpn.com.udp.ovpn’</strong><br> <strong>uci commit openvpn</strong></blockquote><p>6. Create a new network interface by running the following commands:</p><blockquote><strong>uci set network.nordvpntun=interface</strong><br> <strong>uci set network.nordvpntun.proto=’none’</strong><br> <strong>uci set network.nordvpntun.ifname=’tun0&#39;</strong><br> <strong>uci commit network</strong></blockquote><p>7. Created a new firewall zone and add a forwarding rule from LAN to VPN by running the following commands:</p><blockquote><strong>uci add firewall zone</strong><br> <strong>uci set </strong><a href="mailto:firewall.@zone[-1].name=&#39;vpnfirewall">firewall.@zone[-1].name=’vpnfirewall</a><strong>’</strong><br> <strong>uci set </strong><a href="mailto:firewall.@zone[-1].input=&#39;REJECT">firewall.@zone[-1].input=’REJECT</a><strong>’</strong><br> <strong>uci set </strong><a href="mailto:firewall.@zone[-1].output=&#39;ACCEPT">firewall.@zone[-1].output=’ACCEPT</a><strong>’</strong><br> <strong>uci set </strong><a href="mailto:firewall.@zone[-1].forward=&#39;REJECT">firewall.@zone[-1].forward=’REJECT</a><strong>’</strong><br> <strong>uci set </strong><a href="mailto:firewall.@zone[-1].masq=&#39;1">firewall.@zone[-1].masq=’1</a><strong>&#39;</strong><br> <strong>uci set </strong><a href="mailto:firewall.@zone[-1].mtu_fix=&#39;1">firewall.@zone[-1].mtu_fix=’1</a><strong>&#39;</strong><br> <strong>uci add_list </strong><a href="mailto:firewall.@zone[-1].network=&#39;nordvpntun">firewall.@zone[-1].network=’nordvpntun</a><strong>’</strong><br> <strong>uci add firewall forwarding</strong><br> <strong>uci set </strong><a href="mailto:firewall.@forwarding[-1].src=&#39;lan">firewall.@forwarding[-1].src=’lan</a><strong>’</strong><br> <strong>uci set </strong><a href="mailto:firewall.@forwarding[-1].dest=&#39;vpnfirewall">firewall.@forwarding[-1].dest=’vpnfirewall</a><strong>’</strong><br> <strong>uci commit firewall</strong></blockquote><p>8. Now I configured the DNS servers. The simplest approach is to use NordVPN DNS for the WAN interface of the router. To add NordVPN DNS, run the following commands:</p><blockquote><strong>uci set network.wan.peerdns=’0&#39;</strong><br> <strong>uci del network.wan.dns</strong><br> <strong>uci add_list network.wan.dns=’103.86.96.100&#39;</strong><br> <strong>uci add_list network.wan.dns=’103.86.99.100&#39;</strong><br> <strong>uci commit</strong></blockquote><p>You can also use the Google DNS servers which are 8.8.8.8 and 8.8.4.4 or Cloudfare which is 1.1.1.1.</p><p><strong>(Optional)</strong> To prevent traffic leakage in case the VPN tunnel disconnects, I opened the “/etc/firewall.user” file using a text editor and add the following content to it:</p><blockquote><strong># This file is interpreted as a shell script.</strong></blockquote><blockquote><strong># Put your custom iptables rules here, and they will be executed with each firewall (re-)start</strong></blockquote><blockquote><strong># Internal uci firewall chains are flushed and recreated on reload, so</strong></blockquote><blockquote><strong># put custom rules into the root chains, e.g. INPUT or FORWARD, or into the</strong></blockquote><blockquote><strong># special user chains, e.g. input_wan_rule or postrouting_lan_rule.</strong></blockquote><blockquote><strong>if (! ip a s tun0 up) &amp;&amp; (! iptables -C forwarding_rule -j REJECT); then</strong></blockquote><blockquote><strong>iptables -I forwarding_rule -j REJECT</strong></blockquote><blockquote><strong>fi</strong></blockquote><p>Additionally, you should create a file called “99-prevent-leak” in the folder “/etc/hotplug.d/iface” by running <strong>nano /etc/hotplug.d/iface/99-prevent-leak</strong> and adding the following content to the file:</p><blockquote><strong>#!/bin/sh</strong></blockquote><blockquote><strong>if [ “$ACTION” = ifup ] &amp;&amp; (ip a s tun0 up) &amp;&amp; (iptables -C forwarding_rule -j REJECT); then</strong></blockquote><blockquote><strong>iptables -D forwarding_rule -j REJECT</strong></blockquote><blockquote><strong>fi</strong></blockquote><blockquote><strong>if [ “$ACTION” = ifdown ] &amp;&amp; (! ip a s tun0 up) &amp;&amp; (! iptables -C forwarding_rule -j REJECT); then</strong></blockquote><blockquote><strong>iptables -I forwarding_rule -j REJECT</strong></blockquote><blockquote><strong>fi</strong></blockquote><p>In some cases, the OpenVPN connection can crash with a log output similar to “couldn’t resolve host…”. In this case, the VPN tunnel itself remains, however, the connection is lost. To reconnect to it automatically, first open the “/etc/rc.local” file using a text editor and add the following line:</p><blockquote><strong>/etc/openvpn/reconnect.sh &amp;</strong></blockquote><p>In addition, you need to create the “reconnect.sh” file in the “/etc/openvpn” directory. It can be done by running the <strong>nano /etc/openvpn/reconnect.sh</strong> command.</p><p>In the file, enter the following script contents:</p><blockquote><strong>#!/bin/sh</strong></blockquote><blockquote><strong>n=10</strong></blockquote><blockquote><strong>while sleep 50; do</strong></blockquote><blockquote><strong>t=$(ping -c $n 8.8.8.8 | grep -o -E ‘[0–9]+ packets r’ | grep -o -E ‘[0–9]+’)</strong></blockquote><blockquote><strong>if [ “$t” -eq 0 ]; then</strong></blockquote><blockquote><strong>/etc/init.d/openvpn restart</strong></blockquote><blockquote><strong>fi</strong></blockquote><blockquote><strong>done</strong></blockquote><p>When you have followed these instructions, you should be connected using the configured connection.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*WL1JyNO7lWRitl_9Hft1yA.jpeg" /></figure><p>PHEW! That was a lot! I hope you enjoyed this ‘little’ project of mine. If you want more contents like, please don’t hesitate to follow for more.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2Fo75ajIFH0QnQC3nCeD%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fo75ajIFH0QnQC3nCeD%2Fgiphy.gif%3Fcid%3D790b7611hi1ps23qr2ynf9i2bozkentugys17zefoc98h9zp%26ep%3Dv1_gifs_trending%26rid%3Dgiphy.gif%26ct%3Dg&amp;image=https%3A%2F%2Fmedia4.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExbXozeXRvemt6bGFpbngydm94OTVrbWN3cjd3ajhjbHcxdjk3a3MxayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw%2Fo75ajIFH0QnQC3nCeD%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="363" frameborder="0" scrolling="no"><a href="https://medium.com/media/525eeb5b9cc491e6561b27a223155e65/href">https://medium.com/media/525eeb5b9cc491e6561b27a223155e65/href</a></iframe><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ec29aa86d073" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Start up Synology NAS RS1221+]]></title>
            <link>https://genkiganko.medium.com/start-up-synology-nas-rs1221-e71770987d9e?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/e71770987d9e</guid>
            <category><![CDATA[hardware]]></category>
            <category><![CDATA[networking]]></category>
            <category><![CDATA[ccna]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Sat, 10 Feb 2024 07:47:23 GMT</pubDate>
            <atom:updated>2024-02-10T07:47:23.756Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/659/1*f79KdxPxa4G1mqrU56y5Ag.jpeg" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ZERi7lOdtn3zoZdjjRemVg.png" /></figure><blockquote>What is a NAS?</blockquote><p>A <strong>network-attached storage (NAS) device </strong>is a data storage device that connects to and is accessed through a network, instead of connecting directly to a computer. NAS devices contain a processor and operating system so it can run applications and provide the intelligence needed for files to be easily shared by authorized people.</p><p>This is one of my favorite network equipment to setup and configure next to next-gen firewalls. <br>* yes, I do love firewalls and they’re amazing if done right.</p><p>Here is a short procedure that you can do when you receive your RS1221+ on your desk and having no idea what to do with it.</p><blockquote>Things that you need:</blockquote><p>Synology NAS RS1221+ <br>3.5&quot; SATA disks (I used x4 4TB disks)<br>Disk trays (3.5&quot; Type R8)<br>10Gbps PCIe 3.0 ethernet adapter (E10G21-F2)<br>Synology DDR4 memory module (optional, though I used another 8GB for mine)<br>power cable (mine was IEC320 C-13 because I had to connect to UPS)<br>CAT6 ethernet cables</p><h3>Now let’s go to the steps now.</h3><ol><li>Open up your NAS device and install your expansion cards. For my case, I added the 4TB 3.5&quot; SATA disk, 8GB memory card and 10Gbps ethernet adapter card.</li></ol><p>2. Close it back up and rack it on your server rack since this is a rackmount server.</p><p>3. When it is all racked up, plug in the LAN cables and power cable and connect to your switches. I did connect LAN 1 and LAN 2 port on each of the Cisco 3850 48P switches.</p><blockquote>NOTE: Make sure when you connect them to your network, you have DHCP enabled on that port. Or else, it will get a 169.254 address, making it inaccessible on your network.</blockquote><p>4. Go to your computer and open up a web browser and open up the Synology Web Assistant. To access that, go to the address bar of your web browser.</p><blockquote>find.synology.com or synologynas:5000 (synologynas.local:5000 for Mac computers)</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*-S7S7kwV_3MYSgY6DZn6DQ.png" /></figure><p>5. You should be able to see this screen below that it has detected the NAS device on your network. Click Next.</p><p>6. After that, you will get a welcome screen. Click on ‘Start’</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*vt-Ua5oxg1R26174Marcog.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*PibYif9UP32NQnoQ_iK_Yw.png" /></figure><p>7. Until you see the ‘Setup’ screen which will ask you to install the DSM. Install and get your latest updates of your DSM.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*IjO9oDNMuR1-8y0v-6iNOw.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*oRix41rSrvC67JW36jfVeQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*74CoYKa5v-iQ5hJcKklKKg.png" /></figure><p>8. After all the initialization, you will see the DSM screen. Now one last</p><p>thing I had to do on my NAS. I bind the LAN 1 and LAN 2 ports for bigger bandwidth. I clicked on the</p><blockquote>Control Panel -&gt; Network -&gt; Network Interface -&gt; Create Bond -&gt; *choose which type of bond that you want</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*SJBRqv1ufg9FuKahFVa3SQ.png" /></figure><p>Easiest option is the ‘Adaptive Load Balancing’ which needs the least work and optimization. After this, it will show you something like below and will get only one IP address for both LAN ports.</p><blockquote>NOTE: This will remove of all the configurations done on those LAN ports that you set up. This includes IP addresses and other network configuration.</blockquote><p>And that’s it!! You have your working NAS now ready to get your backups, iSCSI storage systems working.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e71770987d9e" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cisco WAP Firmware Upgrade 3800 series (CAPWAP to Mobility Express)]]></title>
            <link>https://genkiganko.medium.com/cisco-wap-firmware-upgrade-3800-series-capwap-to-mobility-express-a9bec76b8a0f?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/a9bec76b8a0f</guid>
            <category><![CDATA[ccna]]></category>
            <category><![CDATA[access-point]]></category>
            <category><![CDATA[networking]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Fri, 02 Feb 2024 09:01:50 GMT</pubDate>
            <atom:updated>2024-02-02T09:01:50.985Z</atom:updated>
            <content:encoded><![CDATA[<h3>CAPWAP to Mobility Express</h3><h4>Factory resetting access point</h4><p>1. Connect console to a laptop (non-domain joined preferred).</p><p>2. Connect PoE to a guest or lab network.</p><p>3. Open up a Putty and connect through serial.</p><p>4. When connected, wait until device has completely booted.</p><p>5. From the access point, press the <strong>MODE</strong> button (as the photo below) for at least 20 seconds. You should be able to see the seconds count from the CLI.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Ur9e21IAEa4p_8_RDUT3YA.jpeg" /></figure><p>6. Wait until it says it is finished.</p><h4>Upgrade firmware from CAPWAP to Mobility Express</h4><p>1. Make sure you have the latest ME firmware saved in your PC. Check the file server or ask someone for confirmation.</p><p>2. Open up a TFTP server, locate the directory of the location where the .tar file is.</p><p>3. From the CLI, login to the device. After the device has been factory reset, you should be able to login as the default username and password ( Username:Cisco, Password: Cisco ; note that this is case-sensitive)</p><p>4. Enable the CLI, and type the following command.</p><blockquote><strong><em>ap-type mobility-express tftp://serverip/filename</em></strong></blockquote><p>5. After entering the command, this should also show in the TFTP server that the transfer is ongoing.</p><p>6. Wait until it is finished. This will take a few minutes to finish.</p><p>7. Check version to confirm.</p><p>*Note: When the AP keeps booting up on a loop, stop access point from keep restarting. You can enter the command below.</p><blockquote><strong><em>logging console disable</em></strong></blockquote><h3>Update your Cisco wireless access point firmware</h3><ol><li>Download portable TFTPD64</li></ol><blockquote>(https://bitbucket.org/phjounin/tftpd64/downloads/)</blockquote><p>2. Copy down the correct CISCO firmware ZIP file</p><p>3. Extract the ZIP file on the local machine</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/307/1*i1OAaDloX6QCgXTWp8p-OQ.png" /></figure><p>4. Run the portable TFTPD64 application and set the TFTPD local folder location to the root of the unzipped folder</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/362/1*bXpTKzlVhWO_Tk9gC06Zbg.png" /></figure><p>5. Use TFTP in the GUI to update:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/327/1*6L8AcKod0s74oJUKelkq4g.png" /></figure><p>6. *Select Auto Restart to have AP automatically reboot — USE for single AP installations ONLY.</p><p>You should see the AP pulling down the matching hardware version firmware file via TFTP:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/398/1*-WYd649O3oyACLglk7ugaA.png" /></figure><p>And voila! You successfully updated your Cisco IOS firmware.</p><p>If you want to try it yourself, get your access point <a href="https://amzn.to/498ZuGR">here</a>.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a9bec76b8a0f" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to upgrade your Cisco 3650/3850 Catalyst switches]]></title>
            <link>https://genkiganko.medium.com/how-to-upgrade-your-cisco-3650-3850-catalyst-switches-dec09610d767?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/dec09610d767</guid>
            <category><![CDATA[ccna]]></category>
            <category><![CDATA[linux]]></category>
            <category><![CDATA[switch]]></category>
            <category><![CDATA[ccnp]]></category>
            <category><![CDATA[networking]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Fri, 26 Jan 2024 11:29:15 GMT</pubDate>
            <atom:updated>2024-01-26T12:34:51.631Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*2ss1IfzDidEqGuYN9CepPQ.jpeg" /></figure><p>YOU! Yes, you! Yeah, I know you have spent countless hours to find out more information about upgrading Cisco switch stacks firmware guide and it is rare to find and you had to scour all over the internet to find the easiest to understand procedural guidelines to upgrade your Cisco Catalyst 3650/3850. So let’s cut to the chase and get started.</p><p>Side note: You can get your <a href="https://amzn.to/3uf27rN">Catalyst 3850 48P PoE here</a>. (Please support.)</p><p>Here is a general guideline on how to upgrade Catalyst 3650/3850 version upgrade.</p><p>First thing you have to know is that there are two modes of operation, Install mode and Bundle mode.</p><blockquote><strong>Install Mode</strong></blockquote><blockquote>The Install mode uses a package-provisioning file named packages.conf in order to boot a switch. In addition, there are a number of .pkg files in the flash drive. It is highly recommended that you do not alter the packages.conf and .pkg files unless directed by a Cisco Technical Assistance Center (TAC) engineer.</blockquote><blockquote><strong>Bundle Mode</strong></blockquote><blockquote>The Bundle mode uses old Cisco IOS images to boot a switch. The Bundle mode consumes more memory than the Install mode because the packages are extracted from the bundle and copied to RAM.</blockquote><p>So what is their difference? Why use one after the other?</p><blockquote>It is mainly because of their speed. As it suggest from the explanation above, Bundle Mode uses more RAM power than the Install mode.</blockquote><h3>Prepare in advance</h3><p>1. First is to download your target software version from <a href="https://software.cisco.com/download/home">https://software.cisco.com/download/home</a></p><p>2. From your switch, do a show version</p><blockquote>Switch#show version<br> &lt;snip&gt;<br> Switch Ports Model SW Version SW Image Mode <br> — — — — — — — — — — — — — — — — — — — — — <br> * 1 52 WS-C3650–48TD 03.06.07E cat3k_caa-universalk9 INSTALL &lt;&lt;&lt;<br> <br> Switch#show version<br> &lt;snip&gt;<br> Switch Ports Model SW Version SW Image Mode <br> — — — — — — — — — — — — — — — — — — — — — <br> * 1 28 WS-C3650–24TD 03.06.09.E cat3k_caa-universalk9 BUNDLE &lt;&lt;&lt;</blockquote><p>3. Ensure there is enough space in flash:</p><pre>Switch# dir flash:<br><br>Directory of flash:/<br><br>&lt;snip&gt;<br><br>1621966848 bytes total (598597632 bytes free)  &lt;&lt;&lt;&lt;</pre><p>4. Copy the target image file to the device’s flash: via TFTP/FTP/USB, etc.</p><pre>Switch# copy tftp://x.x.x.x/cat3k_caa-universalk9.16.03.05.SPA.bin flash:cat3k_caa-universalk9.16.03.05.SPA.bin</pre><pre>Destination filename [cat3k_caa-universalk9.16.03.05.SPA.bin]?</pre><pre>Accessing tftp://x.x.x.x/cat3k_caa-universalk9.16.03.05.SPA.bin...</pre><pre>Loading cat3k_caa-universalk9.16.03.05.SPA.bin from x.x.x.x (via GigabitEthernet0/0):</pre><pre>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</pre><pre>[OK - 489159804 bytes]</pre><pre>489159804 bytes copied in 143.802 secs (3401620 bytes/sec)</pre><pre>Switch#</pre><h3>Upgrading from 3.x to 16.x</h3><h4>Upgrade from Install mode to Install mode</h4><p>1. Make sure it is running in Install mode in advance.</p><pre>Switch#show version | in INSTALL</pre><pre> *    2 56    WS-C3850-48P       03.06.06E         cat3k_caa-universalk9 INSTALL</pre><p>2. Execute the software install command and reload the device.</p><pre>Switch#software install file flash:cat3k_caa-universalk9.16.03.03.SPA.bin new force<br><br>Preparing install operation ...<br><br>[2]: Starting install operation<br><br>[2]: Expanding bundle flash:cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>[2]: Copying package files<br><br>[2]: Package files copied<br><br>[2]: Finished expanding bundle flash:cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>[2]: Verifying and copying expanded package files to flash:<br><br>[2]: Verified and copied expanded package files to flash:<br><br>[2]: Starting compatibility checks<br><br>[2]: Bypassing peer package compatibility checks due to &#39;force&#39; command option<br><br>[2]: Finished compatibility checks<br><br>[2]: Starting application pre-installation processing<br><br>[2]: Old files list:<br><br>    Removed cat3k_caa-base.SPA.03.06.06E.pkg<br><br>    Removed cat3k_caa-drivers.SPA.03.06.06E.pkg<br><br>    Removed cat3k_caa-infra.SPA.03.06.06E.pkg<br><br>    Removed cat3k_caa-iosd-universalk9.SPA.152-2.E6.pkg<br><br>    Removed cat3k_caa-platform.SPA.03.06.06E.pkg<br><br>    Removed cat3k_caa-wcm.SPA.10.2.160.0.pkg<br><br>[2]: New files list:<br><br>    Added cat3k_caa-guestshell.16.03.03.SPA.pkg<br><br>    Added cat3k_caa-rpbase.16.03.03.SPA.pkg<br><br>    Added cat3k_caa-rpcore.16.03.03.SPA.pkg<br><br>    Added cat3k_caa-srdriver.16.03.03.SPA.pkg<br><br>    Added cat3k_caa-wcm.16.03.03.SPA.pkg<br><br>    Added cat3k_caa-webui.16.03.03.SPA.pkg<br><br>[2]: Creating pending provisioning file<br><br>[2]: Finished installing software.  New software will load on reboot.<br><br>[2]: Committing provisioning file<br><br>[2]: Do you want to proceed with reload? [yes/no]: y<br><br>[2]: Reloading<br><br><br><br>%IOSXEBOOT-4-FLASH: (rp/0): deleting cat3k_caa-universalk9.16.03.03.SPA.bin because free space on flash is less than 300MB<br><br>%IOSXEBOOT-8e30b253627ff1aae4fee6643a923d8a-new_cksum: (rp/0): 4<br><br>%IOSXEBOOT-8e30b253627ff1aae4fee6643a923d8a-saved_cksum: (rp/0): 4<br><br>%IOSXEBOOT-Fri-###: (rp/0): Mar 17 16:27:16 Universal 2017 PLEASE DO NOT POWER CYCLE ### BOOT LOADER UPGRADING 4<br><br>%IOSXEBOOT-loader-boot: (rp/0): upgrade successful <br><br>Front-end Microcode IMG MGR: Programming device 0...rwRrrrrrrwbr><br>Front-end Microcode IMG MGR: Preparing to program device[0]...25166 bytes.<br><br>Front-end Microcode IMG MGR: Programming device 0...rrrrrrw..0%....10%....20%......30%...40%......50%....60%......70%...80%......90%....100%wRr!<br><br>Front-end Microcode IMG MGR: Microcode programming complete for device 0.<br><br>Front-end Microcode IMG MGR: Preparing to program device[0]...86370 bytes.... Skipped[3].<br><br>Front-end Microcode IMG MGR: Microcode programming complete in 244 seconds</pre><p>Ensure there is enough space in flash:</p><p>3. After starting the device, check the version information using show version.</p><pre>Switch#show version | in IOS</pre><pre>Cisco IOS Software [Denali], Catalyst L3 Switch Software (CAT3K_CAA-UNIVERSALK9-M), Version 16.3.3, RELEASE SOFTWARE (fc3)</pre><pre>Cisco IOS-XE software, Copyright (c) 2005-2017 by cisco Systems, Inc.</pre><blockquote><strong>Note: It is mandatory to use the keywords “new” and “force” when upgrading from 3.6.X to 16.X. If “new” and “force” are missing, the following error may occur and the program may not run properly.</strong></blockquote><pre>Switch#software install file flash:cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>Preparing install operation ...<br><br>[2]: Starting install operation<br><br>[2]: Expanding bundle flash:cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>[2]: Copying package files<br><br>[2]: Package files copied<br><br>[2]: Finished expanding bundle flash:cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>[2]: Verifying and copying expanded package files to flash:<br><br>[2]: Verified and copied expanded package files to flash:<br><br>[2]: Starting compatibility checks<br><br>[2]: % Candidate package compatibility checks failed because the following<br><br>       package dependencies were not satisfied. Operation aborted.<br><br>[2]: % An internal error was encountered. Operation aborted.</pre><blockquote>If the above error occurs, you need to perform a “software clean” and re-copy the image, and then repeat the steps with “new” and “force”.</blockquote><pre>Switch#software clean<br><br>Preparing clean operation ...<br><br>[2]: Cleaning up unnecessary package files<br><br>[2]: No path specified, will use booted path flash:packages.conf<br><br>[2]: Cleaning flash:<br><br>[2]: Preparing packages list to delete ...<br><br>     In use files, will not delete:<br><br>       cat3k_caa-base.SPA.03.06.06E.pkg<br><br>       cat3k_caa-drivers.SPA.03.06.06E.pkg<br><br>       cat3k_caa-infra.SPA.03.06.06E.pkg<br><br>       cat3k_caa-iosd-universalk9.SPA.152-2.E6.pkg<br><br>       cat3k_caa-platform.SPA.03.06.06E.pkg<br><br>       cat3k_caa-wcm.SPA.10.2.160.0.pkg<br><br>       packages.conf<br><br>[2]: Files that will be deleted:<br><br>    cat3k_caa-guestshell.16.03.03.SPA.pkg<br><br>    cat3k_caa-rpbase.16.03.03.SPA.pkg<br><br>    cat3k_caa-rpcore.16.03.03.SPA.pkg<br><br>    cat3k_caa-srdriver.16.03.03.SPA.pkg<br><br>    cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>    cat3k_caa-wcm.16.03.03.SPA.pkg<br><br>    cat3k_caa-webui.16.03.03.SPA.pkg<br><br>[2]: Do you want to proceed with the deletion? [yes/no]: y<br><br>[2]: Clean up completed</pre><pre>&lt;snip&gt;</pre><h4>Upgrade from Bundle mode to Install mode</h4><p>1. Make sure it is running in Bundle mode in advance.</p><pre>Switch#show version | in BUNDLE</pre><pre>*    2 56    WS-C3850-48P       03.06.06.E        cat3k_caa-universalk9 BUNDLE</pre><p>2. Convert the .bin file to a Package file using the software expand command.</p><pre>Switch#software expand file flash:cat3k_caa-universalk9.16.03.03.SPA.bin to flash:<br><br>Preparing expand operation ...<br><br>[2]: Expanding bundle flash:cat3k_caa-universalk9.16.03.03.SPA.bin<br><br>[2]: Copying package files<br><br>[2]: Package files copied<br><br>[2]: Finished expanding bundle flash:cat3k_caa-universalk9.16.03.03.SPA.bin</pre><p>3. Verify that the packages.conf file has been generated in flash:.</p><pre>Switch#directory | in packages.conf<br><br>30979  -rw-        1236  Dec 22 2015 13:16:22 -04:00  packages.conf</pre><p>4. Change the Boot variable and execute write memory.</p><pre>Switch#configure terminal</pre><pre>Enter configuration commands, one per line.  End with CNTL/Z.</pre><pre>Switch(config)#no boot system</pre><pre>Switch(config)#boot system flash:packages.conf</pre><pre>Switch(config)#end</pre><pre>Switch#write memory</pre><pre>Switch#show boot</pre><pre>---------------------------</pre><pre>Switch 1</pre><pre>---------------------------</pre><pre>Current Boot Variables:</pre><pre>BOOT variable = flash:packages.conf;</pre><pre>Boot Variables on next reload:</pre><pre>BOOT variable = flash:packages.conf;</pre><pre>&lt;snip&gt;</pre><p>5. Reload the device.</p><pre>Switch#show version | in IOS</pre><pre>Cisco IOS Software [Denali], Catalyst L3 Switch Software (CAT3K_CAA-UNIVERSALK9-M), Version 16.3.3, RELEASE SOFTWARE (fc3)</pre><pre>Cisco IOS-XE software, Copyright (c) 2005-2017 by cisco Systems, Inc.</pre><p>6. After starting the device, check the version information using show version.</p><pre>Switch#show version | in IOS</pre><pre>Cisco IOS Software [Denali], Catalyst L3 Switch Software (CAT3K_CAA-UNIVERSALK9-M), Version 16.3.3, RELEASE SOFTWARE (fc3)</pre><pre>Cisco IOS-XE software, Copyright (c) 2005-2017 by cisco Systems, Inc.</pre><h3>Upgrading from Install/Bundle mode to Bundle mode</h3><p>1. Make sure that the target file has been copied to flash:.</p><pre>Switch#dir flash:</pre><pre>31053  -rw-      537337933   Aug 9 2019 07:39:24 +00:00  cat3k_caa-universalk9.16.03.09.SPA.bin</pre><p>2. Change the Boot variable and execute write memory.</p><pre>Switch#configure terminal</pre><pre>Enter configuration commands, one per line.  End with CNTL/Z.</pre><pre>Switch(config)#no boot system</pre><pre>Switch(config)#boot system flash:cat3k_caa-universalk9.16.03.09.SPA.bin</pre><pre>Switch(config)#end</pre><pre>Switch#write memory</pre><pre>Switch#show boot</pre><pre>---------------------------</pre><pre>Switch 1</pre><pre>---------------------------</pre><pre>Current Boot Variables:</pre><pre>BOOT variable = flash:cat3k_caa-universalk9.16.03.09.SPA.bin;</pre><pre>Boot Variables on next reload:</pre><pre>BOOT variable = flash:cat3k_caa-universalk9.16.03.09.SPA.bin;</pre><pre>&lt;snip&gt;</pre><p>3. Reload the device.</p><pre>Switch#reload</pre><pre>Proceed with reload? [confirm]</pre><p>4. After starting the device, check the version information using show version.</p><pre>Switch#show version</pre><pre>&lt;snip&gt;</pre><pre>Switch Ports Model              SW Version        SW Image              Mode  </pre><pre>------ ----- -----              ----------        ----------            ----  </pre><pre>*    1 32    WS-C3850-24T       16.3.9           CAT3K_CAA-UNIVERSALK9 BUNDLE</pre><h3>Upgrading from 16.X to 16.X</h3><h4>Upgrade from Install mode to Install mode</h4><p>1. Make sure it is running in Install mode in advance.</p><pre>switch#show version</pre><pre>&lt;snip&gt;</pre><pre>Switch Ports Model              SW Version        SW Image              Mode  </pre><pre>------ ----- -----              ----------        ----------            ----  </pre><pre>*    1 28    WS-C3650-24TS      16.5.1a            CAT3K_CAA-UNIVERSALK9 INSTALL</pre><p>2. Execute the following command.</p><pre>Switch#request platform software package install switch all file flash:cat3k_caa-universalk9.16.03.03.SPA.bin</pre><pre>[1]: Expanding file</pre><pre>[1]: Performing install</pre><pre>[1]: install package(s) on switch 1</pre><pre>Old files list:</pre><pre> Removed cat3k_caa-guestshell.16.05.01a.SPA.pkg</pre><pre> Removed cat3k_caa-rpbase.16.05.01a.SPA.pkg</pre><pre> Removed cat3k_caa-rpcore.16.05.01a.SPA.pkg</pre><pre> Removed cat3k_caa-srdriver.16.05.01a.SPA.pkg</pre><pre> Removed cat3k_caa-webui.16.05.01a.SPA.pkg</pre><pre>New files list:</pre><pre> Added cat3k_caa-guestshell.16.03.03.SPA.pkg</pre><pre> Added cat3k_caa-rpbase.16.03.03.SPA.pkg</pre><pre> Added cat3k_caa-rpcore.16.03.03.SPA.pkg</pre><pre> Added cat3k_caa-srdriver.16.03.03.SPA.pkg</pre><pre> Added cat3k_caa-wcm.16.03.03.SPA.pkg</pre><pre> Added cat3k_caa-webui.16.03.03.SPA.pkg</pre><pre>Finished list of software package changes</pre><pre>SUCCESS: Software provisioned. New software will load on reboot.</pre><pre>[1]: Finished install successful on switch 1</pre><pre>Checking status of install on [1]</pre><pre>[1]: Finished install in switch 1</pre><pre>SUCCESS: Finished install: Success on [1]</pre><p>3. Reload the device.</p><pre>Switch#reload</pre><pre>Reload command is being issued on Active unit, this will reload the whole stack</pre><pre>Proceed with reload? [confirm]</pre><p>4. After starting the device, check the version information using show version.</p><pre>Switch#show version</pre><pre>&lt;snip&gt;</pre><pre>Switch Ports Model              SW Version        SW Image              Mode  </pre><pre>------ ----- -----              ----------        ----------            ----  </pre><pre>*    1 28    WS-C3650-24TS      16.3.3            CAT3K_CAA-UNIVERSALK9 INSTALL</pre><h4>Upgrade from Bundle mode to Install mode</h4><p>1. Make sure it is running in Bundle mode in advance.</p><pre>Switch#show ver | in BUNDLE</pre><pre>     1 32    WS-C3850-24T       16.3.8            CAT3K_CAA-UNIVERSALK9 BUNDLE</pre><p>2. Convert the bin file to Package using the request platform software package expand command.</p><pre>Switch#request platform software package expand switch all file flash:cat3k_caa-universalk9.16.06.05.SPA.bin</pre><pre>[2]: Expanding file</pre><pre>[2]: Finished expanding all-in-one software package in switch 1</pre><pre>SUCCESS: Finished expanding all-in-one software package.</pre><pre>Switch#</pre><p>3. Verify that the packages.conf file has been generated in flash:.</p><pre>Switch#dir | in packages.conf</pre><pre>30994  -rw-             4742  Aug 19 2019 05:51:43 +00:00  packages.conf</pre><p>4. Change the Boot variable and execute write memory.</p><pre>Switch#configure terminal</pre><pre>Enter configuration commands, one per line.  End with CNTL/Z.</pre><pre>Switch(config)#no boot system</pre><pre>Switch(config)#boot system flash:packages.conf</pre><pre>Switch(config)#end</pre><pre>Switch#write memory</pre><pre>Switch#show boot</pre><pre>---------------------------</pre><pre>Switch 1</pre><pre>---------------------------</pre><pre>Current Boot Variables:</pre><pre>BOOT variable = flash:packages.conf;</pre><pre>Boot Variables on next reload:</pre><pre>BOOT variable = flash:packages.conf;</pre><pre>&lt;snip&gt;</pre><p>5. Reload the device.</p><pre>Switch#reload</pre><pre>Proceed with reload? [confirm]</pre><h3>Upgrading from Install/Bundle mode to Bundle mode</h3><p>The steps are the same as in “Upgrading from 3.X to 16.X” &gt; “Upgrading from Install/Bundle mode to Bundle mode” above. See above.</p><p>Below are the commands related to upgrading versions above 3.X and 16.X.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*KqoQ5Zmfll0RQgXPFX1jIg.png" /></figure><p>And there you have it! Easiest way to have your Cisco Catalyst switches on hand! Be sure to follow for more content like this.</p><h3>References:</h3><h4>Release Notes for Cisco Catalyst 3650 Series Switches, Cisco IOS XE Denali 16.3.x<br> Upgrading the Switch Software</h4><p><a href="https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3650/software/release/16-3/release_notes/ol-16-3-3650.html#pgfId-1118681">https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3650/software/release/16-3/release_notes/ol-16-3-3650.html#pgfId-1118681</a></p><h4>Switch Stack Update</h4><p><a href="https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3850/software/release/16-1/best_practices_guide/BP_Cat3850/BP_stack_upgrade.pdf?dtid=osscdc000283">https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3850/software/release/16-1/best_practices_guide/BP_Cat3850/BP_stack_upgrade.pdf?dtid=osscdc000283</a></p><h4>Catalyst 3850 シリーズ スイッチのアップグレード、管理、および回復の方法</h4><p><a href="https://www.cisco.com/c/ja_jp/support/docs/switches/catalyst-3850-series-switches/117552-technote-cat3850-00.html?dtid=osscdc000334">https://www.cisco.com/c/ja_jp/support/docs/switches/catalyst-3850-series-switches/117552-technote-cat3850-00.html?dtid=osscdc000334</a></p><h4>Cisco Content Hub</h4><p><a href="https://content.cisco.com/chapter.sjs?uri=/searchable/chapter/c/en/us/td/docs/switches/lan/Denali_16-1/ConfigExamples_Technotes/Config_Examples/Misc/qos/m_install_vs_bundle.html.xml">https://content.cisco.com/chapter.sjs?uri=/searchable/chapter/c/en/us/td/docs/switches/lan/Denali_16-1/ConfigExamples_Technotes/Config_Examples/Misc/qos/m_install_vs_bundle.html.xml</a></p><h4>Cisco Community</h4><p><a href="https://community.cisco.com/t5/tkb-%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9-%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/catalyst3650-catalyst3850-%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%83%E3%83%97%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89%E6%89%8B%E9%A0%86/ta-p/3917918">https://community.cisco.com/t5/tkb-%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%A4%E3%83%B3%E3%83%95%E3%83%A9-%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/catalyst3650-catalyst3850-%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A2%E3%83%83%E3%83%97%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89%E6%89%8B%E9%A0%86/ta-p/3917918</a></p><h4>LearnDuty</h4><p><a href="https://learnduty.com/network-techs/catalyst-3850-upgrade-process-step-by-step/">https://learnduty.com/network-techs/catalyst-3850-upgrade-process-step-by-step/</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=dec09610d767" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Create your own LAMP(Linux, Apache, MySQL, PHP) web server on a Raspberry Pi 4b]]></title>
            <link>https://genkiganko.medium.com/create-your-own-lamp-linux-apache-mysql-php-web-server-on-a-raspberry-pi-4b-3c0938426cf2?source=rss-88d1438ba3c5------2</link>
            <guid isPermaLink="false">https://medium.com/p/3c0938426cf2</guid>
            <category><![CDATA[technology]]></category>
            <category><![CDATA[raspberry-pi]]></category>
            <category><![CDATA[web-server]]></category>
            <dc:creator><![CDATA[Genki Ganko]]></dc:creator>
            <pubDate>Mon, 07 Aug 2023 06:15:36 GMT</pubDate>
            <atom:updated>2024-01-26T12:37:01.035Z</atom:updated>
            <content:encoded><![CDATA[<p>Picture yourself wandering through the vast digital landscape of the internet, clicking through websites that effortlessly deliver the information you seek. Ever wondered what magic lies behind these virtual marvels? Enter the LAMP web server, a powerful combination of open-source software that fuels countless websites with its dynamic prowess. LAMP stands for Linux, Apache, MySQL, and PHP/Perl/Python, each playing a crucial role in this harmonious quartet. Linux, the sturdy operating system, provides a robust foundation, while Apache, the trusty web server, diligently handles the incoming requests, serving up web pages like a seasoned maestro. Together with MySQL, the database management system that securely stores and retrieves data, and PHP/Perl/Python, the versatile scripting languages that bring life to web applications, LAMP forms an unstoppable alliance. It’s a captivating symphony of technologies working hand in hand, shaping the internet as we know it.</p><p>In this article, you will be able to create your own LAMP Ubuntu web server within your reach, moreover, on a single board computer, Raspberry Pi 4b.</p><h3><strong>WHAT YOU NEED</strong></h3><ol><li>Raspberry Pi — Raspberry Pi 3b, 4b, Pico, 400 or whichever you have</li><li>At least 32GB microSD card</li><li>Raspberry Pi Power Supply (5V 2.5A)</li><li>Ubuntu Server 22.04.2 LTS ISO (link for site below)</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*8WwB3i5nvi7XOIXabdW38g.jpeg" /></figure><h3><strong>Creating Ubuntu image on your microSD card</strong></h3><ol><li>Download the Raspberry Pi Imager from here. Double click on the installer and install as suggested.</li></ol><p><a href="https://www.raspberrypi.com/software/">https://www.raspberrypi.com/software/</a></p><p>2. From the Ubuntu website, download the ISO/.xz file. Depending on your preferences, choose either 64bit or 32bit. I suggest you using 64bit architecture because it is backwards-compatible to 32bit software that you want to install.</p><p><a href="https://ubuntu.com/download/raspberry-pi">Install Ubuntu on a Raspberry Pi | Ubuntu</a></p><p>3. Open up your Raspberry Pi Imager that you just installed.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/365/1*ccgE2HFDitG2L3QxfERaoQ.png" /><figcaption>+</figcaption></figure><p>4. Plug in your microSD card to your computer. You will need a microSD card reader or USB-microSD adapter for it. From the Raspberry Pi Imager GUI, choose the operating system, which is Ubuntu Server, and the storage, which will be your SD card. Navigate to ‘Other General-purpose OS’, and choose Ubuntu. If you want to manually choose the Ubuntu installer that you just downloaded, click on the ‘Use Custom’ menu below. After the operating system and storage has been chosen, click on the ‘Write’ and click OK to erase the card.</p><p>Note: You might need to reformat your SD card to FAT32. So before you do the steps above, please format your SD card first.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/676/1*RX7RiUMiGDlk8LZhxh13sw.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/687/1*Ogi6fouktAQbfXuiy-iVpg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/677/1*btztdZIjAzTLwYjhcuk2tw.png" /></figure><p>5. When installation is finished, insert your microSD card to your Raspberry Pi. It should be on the back on the computer board.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*0TFJORT6Zh5cO8xTTfvjjw.jpeg" /></figure><p>6. Now power up your Raspberry Pi by connecting the USB-C power supply and your wired network. Note that it will take long for it to initially boot up since it is currently installing after you put on the power. On my case, I directly connected my Raspberry Pi ethernet port to my TP-LINK Archer AX83 wireless router. There are a few ways to remote to your Raspberry Pi but the easiest would be to SSH to it.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*dw5ObC9e9O2OAOOx2AMa5Q.png" /></figure><h3><strong>Installing Apache</strong></h3><p>Apache2, often referred to simply as Apache, is a widely-used open-source web server software. It is the second major version of the Apache HTTP Server, developed and maintained by the Apache Software Foundation. Apache2 is known for its robustness, security, and flexibility, making it one of the most popular choices for hosting websites and serving web content on the internet.</p><ol><li>Since this is the first installation, you need to fully update your Linux systems. To do that, enter the command below:</li></ol><blockquote><em>sudo apt update &amp;&amp; sudo apt upgrade -y</em></blockquote><p>2. Next is to install Apache2. It is the most widely used web server software so in this case, we will use this one. Enter the command below to install the Apache2.</p><blockquote><em>sudo apt install apache2 -y</em></blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/576/1*pcchow7FoT87nE_pujlGhw.png" /></figure><p>3. To test your Apache2 installation, go to /var/ww/html directory and you will be able to see a file named index.html. At this point, you are now able to see the Apache web page from your local browser by typing in the IP address of the Raspberry Pi on your browser.</p><blockquote>cd /var/www/html</blockquote><blockquote>ls -l</blockquote><blockquote>cat index.html</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*1yvVx-MaxNzzCQA4DG9YMg.jpeg" /></figure><h3>Installing PHP</h3><p>PHP is a server side scripting language. PHP (<strong>H</strong>ypertext <strong>P</strong>re<strong>p</strong>rocessor) is used to develop dynamic web applications. A PHP file contains &lt;?php … ?&gt; tags and ends with the extension “<em>.php</em>“.</p><ol><li>To install, enter the command below.</li></ol><blockquote>sudo apt install php -y</blockquote><p>2. You can remove the index.html file and create a PHP file and name it index.php</p><blockquote>sudo rm index.html</blockquote><blockquote>sudo nano index.php</blockquote><p>3. In your <em>index.php</em> file add the following code to echo the “<strong>hello world</strong>” message:</p><p>&lt;?php echo “This is a test PHP file. Hello World!”; ?&gt;</p><p>4. To save your file: press <strong>Ctrl+X</strong>, followed by <strong>y</strong>, and press <strong>Enter </strong>to exit.</p><p>5. Restart Apache2 service.</p><p>6. To test if Apache2 is serving <em>.php</em> files, open the Raspberry Pi IP address and it should display the message from the <em>index.php</em> script created earlier.</p><p>7. If everything is working, you can remove <em>index.php</em> file from the /var/www/html directory:</p><blockquote>sudo rm index.php</blockquote><h3>Installing MySQL (MariaDB)</h3><p>MySQL is an open-source relational database management system (RDBMS) that allows you to store, manage, and retrieve data efficiently. It is one of the most popular and widely used database systems in the world. Developed by MySQL AB, which was later acquired by Oracle Corporation, MySQL is renowned for its reliability, performance, and ease of use.</p><ol><li>Install the MySQL Server (MariaDB Server) and PHP-MySQL packages by entering the commands below.</li></ol><blockquote>sudo apt install mariadb-server php-mysql -y</blockquote><blockquote>sudo service apache2 restart</blockquote><p>2. After installing MySQL (MariaDB Server), it’s recommend to run this command to secure your MySQL installation.</p><blockquote>sudo mysql_secure_installation</blockquote><ul><li>You will be asked Enter <strong>current password for root</strong> (type a secure password): press Enter</li><li>Type in <strong>Y</strong> and press <strong>Enter </strong>to Set root password</li><li>Type in a password at the New password: prompt, and press Enter. Important: remember this root password, as you will need it later</li><li>Type in <strong>Y</strong> to Remove anonymous users</li><li>Type in <strong>Y</strong> to Disallow root login remotely</li><li>Type in <strong>Y</strong> to Remove test database and access to it</li><li>Type in <strong>Y</strong> to Reload privilege tables now</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NHjviXYJ_81RmLZMu2pQ4A.jpeg" /></figure><p>3. When installation is done, you will see a messsage that says ‘Thanks for using MariaDB’.</p><h3>Installing phpMyAdmin</h3><p>phpMyAdmin is a free and open-source web application written in PHP that provides a graphical user interface (GUI) for managing and administering MySQL databases. It allows users to interact with MySQL databases through a web browser, making it easier to perform various database-related tasks without the need for complex command-line interactions.</p><ol><li>Run the command below to install the phpMyAdmin software.</li></ol><blockquote>sudo apt install phpmyadmin -y</blockquote><p>PHPMyAdmin installation program will ask you few questions. We’ll use the <strong>dbconfig-common</strong>.</p><ul><li>Select <strong>Apache2 </strong>when prompted and press the <strong>Enter </strong>key</li><li>Configuring <strong>phpmyadmin</strong>? <strong>OK</strong></li><li>Configure database for phpMyAdmin with <strong>dbconfig-common</strong>? <strong>Yes</strong></li><li>Type your <strong>password </strong>and press <strong>OK</strong></li></ul><p>2. Enable the PHP MySQLi extension and restart Apache2 for changes to take effect.</p><blockquote>sudo phpenmod mysqli</blockquote><blockquote>sudo service apache2 restart</blockquote><p>3. When you go to your RPi IP address followed by <strong>/phpmyadmin</strong> (in my case <a href="http://192.168.0.166/phpmyadmin/">http://192.168.0.86/phpmyadmin)</a>, you’ll probably see the “Not Found” error page in your browser. If this happens, you need to move your phpMyAdmin folder to /var/www/html folder. Do this by running the command below. Note that this will note move the folder, but creating a link from the original path.</p><blockquote>sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin</blockquote><p>4. Now when you list the contents of that path, you should be able to see the file from your current directory.</p><blockquote>ls /var/www/html</blockquote><p>5. Reload your web page and you should be able to see the login interface of the phpMyAdmin. Enter username as ‘root’ and the password that you just created for the database.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*frz_4-5TO5uKrpVRCKiJeg.jpeg" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*8uxg9C-34dVmVPxHSCQGFw.jpeg" /></figure><p>NOTE!! When you experience a login error from the phpMyAdmin login, you will need to create a new user to login. Enter these commands below to create a new user and the new user will be ‘admin’.</p><blockquote>sudo mysql — user=root — password</blockquote><blockquote>&gt; create user admin@localhost identified by ‘your_password’;</blockquote><blockquote>&gt; grant all privileges on *.* to admin@localhost;</blockquote><blockquote>&gt; FLUSH PRIVILEGES;</blockquote><blockquote>&gt; exit;</blockquote><p>And that’s it! You have finally installed your LAMP web server in your hands. Enjoy doing your projects!!</p><p>You can get your cheap <a href="https://amzn.to/498ZuGR">Raspberry Pi 4B</a> here.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3c0938426cf2" width="1" height="1" alt="">]]></content:encoded>
        </item>
    </channel>
</rss>